// generated with ast extension for cup
// version 0.8
// 25/7/2024 19:43:35


package rs.ac.bg.etf.pp1.ast;

public interface Visitor { 

    public void visit(SingleFormalParamDecl SingleFormalParamDecl);
    public void visit(Factor Factor);
    public void visit(Statement Statement);
    public void visit(NamespaceDeclList NamespaceDeclList);
    public void visit(ConstDeclList ConstDeclList);
    public void visit(CondTerms CondTerms);
    public void visit(FormalParamsList FormalParamsList);
    public void visit(ConstDeclElement ConstDeclElement);
    public void visit(MethodParams MethodParams);
    public void visit(Relop Relop);
    public void visit(DeclList DeclList);
    public void visit(ForCond ForCond);
    public void visit(Expr Expr);
    public void visit(FactorList FactorList);
    public void visit(VarDecl VarDecl);
    public void visit(DblColon DblColon);
    public void visit(Unmatched Unmatched);
    public void visit(Mulop Mulop);
    public void visit(DesignatorStatement DesignatorStatement);
    public void visit(NumConstList NumConstList);
    public void visit(StaticInitList StaticInitList);
    public void visit(CondFactFor CondFactFor);
    public void visit(Addop Addop);
    public void visit(StatementList StatementList);
    public void visit(Assignop Assignop);
    public void visit(ConstDecl ConstDecl);
    public void visit(ActualParams ActualParams);
    public void visit(ReturnType ReturnType);
    public void visit(DeclElement DeclElement);
    public void visit(StaticVarDeclList StaticVarDeclList);
    public void visit(IfStatement IfStatement);
    public void visit(Array Array);
    public void visit(MethodDeclList MethodDeclList);
    public void visit(Specification Specification);
    public void visit(FormalParams FormalParams);
    public void visit(TermList TermList);
    public void visit(VarDeclLista VarDeclLista);
    public void visit(ActualParamsList ActualParamsList);
    public void visit(ActPars ActPars);
    public void visit(Designator Designator);
    public void visit(Matched Matched);
    public void visit(VarDeclList VarDeclList);
    public void visit(CondFact CondFact);
    public void visit(OptionalExpr OptionalExpr);
    public void visit(VarDeclElement VarDeclElement);
    public void visit(Term Term);
    public void visit(OptionalFunctionCall OptionalFunctionCall);
    public void visit(CondFacts CondFacts);
    public void visit(ConstVal ConstVal);
    public void visit(Modulo Modulo);
    public void visit(Divide Divide);
    public void visit(Multiply Multiply);
    public void visit(Subtract Subtract);
    public void visit(Add Add);
    public void visit(LessOrEqual LessOrEqual);
    public void visit(Less Less);
    public void visit(GreaterOrEqual GreaterOrEqual);
    public void visit(Greater Greater);
    public void visit(NotEqual NotEqual);
    public void visit(Equal Equal);
    public void visit(Assign Assign);
    public void visit(Label Label);
    public void visit(FactorExpr FactorExpr);
    public void visit(FactorNewNoPars FactorNewNoPars);
    public void visit(FactorNewActPars FactorNewActPars);
    public void visit(FactorNewMatrix FactorNewMatrix);
    public void visit(FactorNewExpr FactorNewExpr);
    public void visit(FactorNew FactorNew);
    public void visit(FactB FactB);
    public void visit(FactCh FactCh);
    public void visit(FactNum FactNum);
    public void visit(DesignatorFactor DesignatorFactor);
    public void visit(FactExpr FactExpr);
    public void visit(FactorSingle FactorSingle);
    public void visit(TermSingle TermSingle);
    public void visit(AddopList AddopList);
    public void visit(MinusTerm MinusTerm);
    public void visit(NegatedTerm NegatedTerm);
    public void visit(ExprTermL ExprTermL);
    public void visit(OneActPar OneActPar);
    public void visit(ActParsDecl ActParsDecl);
    public void visit(StartArray StartArray);
    public void visit(ArrayName ArrayName);
    public void visit(DesignatorExprEl DesignatorExprEl);
    public void visit(MatrixDesignator MatrixDesignator);
    public void visit(DesignatorIdentEl DesignatorIdentEl);
    public void visit(DesignatorDecl DesignatorDecl);
    public void visit(CopyArray CopyArray);
    public void visit(DesDec DesDec);
    public void visit(DesInc DesInc);
    public void visit(FunctionCallStmt FunctionCallStmt);
    public void visit(DesAssign DesAssign);
    public void visit(RelopCondFact RelopCondFact);
    public void visit(CondFactExpr CondFactExpr);
    public void visit(CondFactSingle CondFactSingle);
    public void visit(AndList AndList);
    public void visit(CondTerm CondTerm);
    public void visit(CondTermSingle CondTermSingle);
    public void visit(OrList OrList);
    public void visit(OrOp OrOp);
    public void visit(Expression Expression);
    public void visit(NoExpression NoExpression);
    public void visit(Condition Condition);
    public void visit(NoNum NoNum);
    public void visit(WithNum WithNum);
    public void visit(AssignError AssignError);
    public void visit(BraceStatList BraceStatList);
    public void visit(PrintStat PrintStat);
    public void visit(ReadStat ReadStat);
    public void visit(MatchedFor MatchedFor);
    public void visit(ReturnStmt ReturnStmt);
    public void visit(ContinueStat ContinueStat);
    public void visit(BreakStat BreakStat);
    public void visit(IfElseStat IfElseStat);
    public void visit(DesignatorStat DesignatorStat);
    public void visit(IfError IfError);
    public void visit(IfElseUnmatch IfElseUnmatch);
    public void visit(IfSingleStat IfSingleStat);
    public void visit(NoOptCondition NoOptCondition);
    public void visit(OptCondition OptCondition);
    public void visit(NoOptDesignStmt NoOptDesignStmt);
    public void visit(OptDesignStmt OptDesignStmt);
    public void visit(ForStatement ForStatement);
    public void visit(ForPostDesignator ForPostDesignator);
    public void visit(ForPreDesignator ForPreDesignator);
    public void visit(ForInit ForInit);
    public void visit(IfCond IfCond);
    public void visit(IfStart IfStart);
    public void visit(ElseStart ElseStart);
    public void visit(UnmatchedStatement UnmatchedStatement);
    public void visit(MatchedStatement MatchedStatement);
    public void visit(NoStatements NoStatements);
    public void visit(Statements Statements);
    public void visit(ActualParamsListDecl ActualParamsListDecl);
    public void visit(FirstActualParamDecl FirstActualParamDecl);
    public void visit(ActualParamsDecl ActualParamsDecl);
    public void visit(NoActualParams NoActualParams);
    public void visit(ActualParamsEnd ActualParamsEnd);
    public void visit(ActualParamsStart ActualParamsStart);
    public void visit(FunctionCall FunctionCall);
    public void visit(NoFunctionCall NoFunctionCall);
    public void visit(FormalParamDecl FormalParamDecl);
    public void visit(ErroneousFormalParam ErroneousFormalParam);
    public void visit(FormalParamsListDecl FormalParamsListDecl);
    public void visit(FirstFormalParamDecl FirstFormalParamDecl);
    public void visit(FormalParamsDecl FormalParamsDecl);
    public void visit(NoFormalParams NoFormalParams);
    public void visit(VoidReturnType VoidReturnType);
    public void visit(NonVoidReturnType NonVoidReturnType);
    public void visit(ErroneousMethodParams ErroneousMethodParams);
    public void visit(ValidMethodParams ValidMethodParams);
    public void visit(MethodSignatureWithoutParams MethodSignatureWithoutParams);
    public void visit(MethodSignature MethodSignature);
    public void visit(MethodDecl MethodDecl);
    public void visit(MethodDeclarations MethodDeclarations);
    public void visit(NoMethodDeclarations NoMethodDeclarations);
    public void visit(StaticInitializerStart StaticInitializerStart);
    public void visit(StaticInitializer StaticInitializer);
    public void visit(StaticInitListEmpty StaticInitListEmpty);
    public void visit(StaticInitListExists StaticInitListExists);
    public void visit(StaticVarDeclListEmpty StaticVarDeclListEmpty);
    public void visit(StaticVarDeclListExists StaticVarDeclListExists);
    public void visit(DoubleColon DoubleColon);
    public void visit(WithoutDoubleColon WithoutDoubleColon);
    public void visit(WithDoubleColon WithDoubleColon);
    public void visit(IdentDecl IdentDecl);
    public void visit(Type Type);
    public void visit(Arr Arr);
    public void visit(Matrix Matrix);
    public void visit(VarDeclArray VarDeclArray);
    public void visit(VarDeclIdent VarDeclIdent);
    public void visit(ErrorVarComma ErrorVarComma);
    public void visit(VarListDecl VarListDecl);
    public void visit(VarElemDecl VarElemDecl);
    public void visit(ErrorVarSemi ErrorVarSemi);
    public void visit(VariableDecl VariableDecl);
    public void visit(NoVarList NoVarList);
    public void visit(VarDl VarDl);
    public void visit(ConstValueB ConstValueB);
    public void visit(ConstValueC ConstValueC);
    public void visit(ConstValueN ConstValueN);
    public void visit(ConstDeclEl ConstDeclEl);
    public void visit(ConstListDecl ConstListDecl);
    public void visit(ErrorConstGlobalDeclarationComma ErrorConstGlobalDeclarationComma);
    public void visit(ErrorConstGlobalDeclarationSemi ErrorConstGlobalDeclarationSemi);
    public void visit(DeclConst DeclConst);
    public void visit(DeclVariables DeclVariables);
    public void visit(DeclConstants DeclConstants);
    public void visit(NoDeclarations NoDeclarations);
    public void visit(DeclarationList DeclarationList);
    public void visit(NamespaceName NamespaceName);
    public void visit(NamespaceDecl NamespaceDecl);
    public void visit(NoNamespace NoNamespace);
    public void visit(NamespaceDeclLista NamespaceDeclLista);
    public void visit(ProgName ProgName);
    public void visit(Program Program);

}
